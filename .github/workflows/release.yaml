name: release

on:
  push:
    tags:
      - "**"

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: a-novel-kit/workflows/publish-actions/auto-release@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

  api-build:
    needs: [release]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    services:
      postgres:
        image: postgres:17-alpine
        options: >-
          --health-cmd pg_isready
          --health-interval 500ms
          --health-timeout 5s
          --health-retries 50
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
    env:
      POSTGRES_DSN: postgres://postgres:postgres@postgres:5432/postgres?sslmode=disable
      APP_MASTER_KEY: "fec0681a2f57242211c559ca347721766f8a3acd8ed2e63b36b3768051c702ca"
      DEBUG: true
    steps:
      - uses: a-novel-kit/workflows/build-actions/docker-rest-api@master
        with:
          file: build/api.Dockerfile
          image_name: ${{ github.repository }}/api
          github_token: ${{ secrets.GITHUB_TOKEN }}
          run_args: -e POSTGRES_DSN="${POSTGRES_DSN}" -e APP_MASTER_KEY="${APP_MASTER_KEY}" -e DEBUG="${DEBUG}"

  rotate-keys-build:
    needs: [release]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    services:
      postgres:
        image: postgres:17-alpine
        options: >-
          --health-cmd pg_isready
          --health-interval 500ms
          --health-timeout 5s
          --health-retries 50
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
    env:
      POSTGRES_DSN: postgres://postgres:postgres@postgres:5432/postgres?sslmode=disable
      APP_MASTER_KEY: "fec0681a2f57242211c559ca347721766f8a3acd8ed2e63b36b3768051c702ca"
      DEBUG: true
    steps:
      - uses: a-novel-kit/workflows/build-actions/docker-job@master
        with:
          file: build/rotatekeys.Dockerfile
          image_name: ${{ github.repository }}/jobs/rotatekeys
          github_token: ${{ secrets.GITHUB_TOKEN }}
          run_args: -e POSTGRES_DSN="${POSTGRES_DSN}" -e APP_MASTER_KEY="${APP_MASTER_KEY}" -e DEBUG="${DEBUG}"

  standalone-build:
    needs: [release]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    services:
      postgres:
        image: postgres:17-alpine
        options: >-
          --health-cmd pg_isready
          --health-interval 500ms
          --health-timeout 5s
          --health-retries 50
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
    env:
      POSTGRES_DSN: postgres://postgres:postgres@postgres:5432/postgres?sslmode=disable
      APP_MASTER_KEY: "fec0681a2f57242211c559ca347721766f8a3acd8ed2e63b36b3768051c702ca"
      DEBUG: true
    steps:
      - uses: a-novel-kit/workflows/build-actions/docker-rest-api@master
        with:
          file: build/standalone.Dockerfile
          image_name: ${{ github.repository }}/standalone
          github_token: ${{ secrets.GITHUB_TOKEN }}
          run_args: -e POSTGRES_DSN="${POSTGRES_DSN}" -e APP_MASTER_KEY="${APP_MASTER_KEY}" -e DEBUG="${DEBUG}"
